#pragma once
/**
 * @brief   对 C++ 数据类型转换的练习
 * @author  koterromanov
 * @date    2022-09-15
 */

class Widget
{
public:
	Widget() {}
	~Widget() {}
}

class Button : public Widget
{
public:
	Button() {}
	~Button() {}
}


void function_type_convert()
{
	/* const_cast 解除常指针 & 常引用的 const 属性 */
	const unsigned char cpbuffer[] = {"hello"};
	unsigned char* pbuffer = const_cast<unsigned char*>(cpbuffer);

	/* static_cast 用于强制类型转换*/
	int type = 100;
	unsigned char ch_type = static_cast<unsigned char>(type);

	/* static_cast 用于存在继承关系的类类型之间的转换 */
	Widget* item = new Button();
	Button* item_button = static_cast<Button*>(item);
	Widget* item_widget = static_cast<Button*>(item_button);

	/* 下行转换，不安全（没有动态类型转换） */
	Widget d;
	Button* item_button_d = static_cast<Button*>(&d);

	/* 上行转换，安全 */
	Button b;
	Widget* item_widget_b = static_cast<Widget*>(&b);

	/* dynamic_cast */

	/* reinterpret_cast */
}